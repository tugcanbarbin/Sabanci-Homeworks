//SUBMITE 5 KALA //FIND company name startpoint destination of flights and occupied seats
SELECT company.company_name, T.startpoint,T.destination,C.occupied_seat_no
FROM ticket T JOIN company ON T.company_id = company.company_id INNER JOIN (SELECT T2.flight_id,COUNT(T2.flight_id) AS occupied_seat_no
                                                                               FROM ticket T2
                                                                                 GROUP BY T2.flight_id) C on T.flight_id = C.flight_id
//Ucuslarini son 3 ay icinde rezerve eden kullanicilar
SELECT account.mail,account.account_id,ticket.flight_time,buy.purchase_date,DATEDIFF(ticket.flight_time,buy.purchase_date) AS date_difference
FROM account
JOIN buy ON buy.account_id = account.account_id
JOIN ticket ON ticket.ticket_id = buy.ticket_id
WHERE DATEDIFF(ticket.flight_time,buy.purchase_date) < 90

//Istanbul(herhangi bir sehir ile degistirilebilir) havalimanini kullanacak yolcular
SELECT buy.account_id,ticket.startpoint,ticket.destination,company.company_name 
FROM ticket 
JOIN buy ON buy.ticket_id = ticket.ticket_id 
JOIN company ON company.company_id = ticket.company_id and (ticket.startpoint = "Istanbul" or ticket.destination = "Istanbul");

//Tugcan her sirket kac bilet 
SELECT company.company_name, ticket.company_id, COUNT(*) AS Number_of_tickets
FROM ticket JOIN company ON ticket.company_id = company.company_id 
GROUP BY company.company_id


//indirimden sonra fiyatı 500 tl den az olan uçuşlar
SELECT COUNT( DISTINCT T.flight_id)
FROM ticket T, campaign CA
WHERE T.flight_id = CA.flight_id AND T.ticket_price - (T.ticket_price  * CA.percentage / 100) < 500

// bir şirketin uçağından uçarak gittiğimiz yerlerde kaç farklı places to eat seçeneğine ılaşabiliriz --> 1
SELECT COUNT(DISTINCT POI.place_to_eat)
FROM company C, ticket T, points_of_interest POI
WHERE C.company_id = T.company_id AND POI.ticket_id = T.ticket_id
AND C.company_name = "Pegasus"

//genel averajdan fazla biletler
Select company.company_name,company.company_id,ticket.ticket_price
From ticket INNER JOIN company ON ticket.company_id = company.company_id
Group BY ticket.ticket_price
HAVING ticket.ticket_price > (Select AVG(T.ticket_price)
                              FROM (Select ticket.ticket_price
                                   From ticket INNER JOIN company ON ticket.company_id = company.company_id
                                   GROUP BY ticket.ticket_price) as T);

//BUTUN ACCOUNTLAR UCUSLAR VB
SELECT 
	account.account_id,
    account.mail,
    shopping_history.company_name,
    shopping_history.ticket_from,
    shopping_history.ticket_to,
    ticket.flight_time
FROM 
	account
JOIN shopping_history ON account.account_id = shopping_history.account_id
JOIN ticket ON ticket.ticket_id = shopping_history.ticket_id
